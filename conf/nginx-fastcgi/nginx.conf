user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log info;
pid /usr/local/nginx/logs/nginx.pid;


events {
    worker_connections 1024;
}

pcre_jit on;


http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server_tokens off;

    log_format main '$remote_addr [$time_local] '
                '"$request_method $scheme://$host$request_uri '
                '$server_protocol" $status $body_bytes_sent '
                '$request_time "$request_filename" '
                '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    

    keepalive_timeout 240;
    client_max_body_size 100M;

    server {
        listen 8080;
        listen [::]:8080;

        server_name localhost;
        # server_name localhost;

        root /var/www/html;
        index index.php index.html index.htm;

        # Location for wiki's entry points
        location ~ ^/(index|load|api|thumb|opensearch_desc|rest|img_auth)\.php$ {
            include /etc/nginx/fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_pass app:9000; # or whatever port your PHP-FPM listens on

        }

        # Handling for the article path (pretty URLs)
        location /wiki/ {
            rewrite ^/wiki/(?<pagename>.*)$ /index.php;
        }

        # MediaWiki assets (usually images)
        location ~ ^/resources/(assets|lib|src) {
            try_files $uri 404;
            add_header Cache-Control "public";
            expires 7d;
        }

        # Assets, scripts and styles from skins and extensions
        location ~ ^/(skins|extensions)/.+\.(css|js|gif|jpg|jpeg|png|svg|wasm|ttf|woff|woff2)$ {
            try_files $uri 404;
            add_header Cache-Control "public";
            expires 7d;
        }

        # License and credits files
        location ~ ^/(COPYING|CREDITS)$ {
            default_type text/plain;
        }
        
        # Uncomment the following code if you wish to use the installer/updater
        # installer/updater
        # location /wiki/mw-config/ {
        # 	# Do this inside of a location so it can be negated
        # 	location ~ \.php$ {
        # 		include /etc/nginx/fastcgi_params;
        # 		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # 		fastcgi_pass app:9000; # or whatever port your PHP-FPM listens on
        # 	}
        # }
        
        # Handling for Mediawiki REST API, see [[mw:API:REST_API]]
        location /rest.php/ {
            try_files $uri $uri/ /rest.php?$query_string;
        }

        ## Uncomment the following code for handling image authentication
        ## Also add "deny all;" in the location for /w/images above
        #location /w/img_auth.php/ {
        #	try_files $uri $uri/ /w/img_auth.php?$query_string;
        #}

        location = /wiki {
		    return 301 https://localhost/wiki/Home_Page;
        }

        location = / {
		    return 301 https://localhost/wiki/Home_Page;
        }

        location / {
		    return 404;
        }
    }
}
